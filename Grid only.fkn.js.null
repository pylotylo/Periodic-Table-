function setup() {
  createCanvas(600, 400);
  background(60);
}

this.x = (600/22);

function draw() {
  
  //column 1
  square((2 * this.x), (2 * this.x), this.x);
  square((2 * this.x), (3 * this.x), this.x);
  square((2 * this.x), (4 * this.x), this.x);
  square((2 * this.x), (5 * this.x), this.x);
  square((2 * this.x), (6 * this.x), this.x);
  square((2 * this.x), (7 * this.x), this.x);
  square((2 * this.x), (8 * this.x), this.x);
  //column 2
  square((3 * this.x), (3 * this.x), this.x);
  square((3 * this.x), (4 * this.x), this.x);
  square((3 * this.x), (5 * this.x), this.x);
  square((3 * this.x), (6 * this.x), this.x);
  square((3 * this.x), (7 * this.x), this.x);
  square((3 * this.x), (8 * this.x), this.x);
  //column 3
  square((4 * this.x), (5 * this.x), this.x);
  square((4 * this.x), (6 * this.x), this.x);
  square((4 * this.x), (7 * this.x), this.x);
  square((4 * this.x), (8 * this.x), this.x);
  //column 4
  square((5 * this.x), (5 * this.x), this.x);
  square((5 * this.x), (6 * this.x), this.x);
  square((5 * this.x), (7 * this.x), this.x);
  square((5 * this.x), (8 * this.x), this.x);
  //column 5
  square((6 * this.x), (5 * this.x), this.x);
  square((6 * this.x), (6 * this.x), this.x);
  square((6 * this.x), (7 * this.x), this.x);
  square((6 * this.x), (8 * this.x), this.x);
  //column 6
  square((7 * this.x), (5 * this.x), this.x);
  square((7 * this.x), (6 * this.x), this.x);
  square((7 * this.x), (7 * this.x), this.x);
  square((7 * this.x), (8 * this.x), this.x);
  //column 7
  square((8 * this.x), (5 * this.x), this.x);
  square((8 * this.x), (6 * this.x), this.x);
  square((8 * this.x), (7 * this.x), this.x);
  square((8 * this.x), (8 * this.x), this.x);
  //column 8
  square((9 * this.x), (5 * this.x), this.x);
  square((9 * this.x), (6 * this.x), this.x);
  square((9 * this.x), (7 * this.x), this.x);
  square((9 * this.x), (8 * this.x), this.x);
  //column 9
  square((10 * this.x), (5 * this.x), this.x);
  square((10 * this.x), (6 * this.x), this.x);
  square((10 * this.x), (7 * this.x), this.x);
  square((10 * this.x), (8 * this.x), this.x);
  //column 10
  square((11 * this.x), (5 * this.x), this.x);
  square((11 * this.x), (6 * this.x), this.x);
  square((11 * this.x), (7 * this.x), this.x);
  square((11 * this.x), (8 * this.x), this.x);
  //column 11
  square((12 * this.x), (5 * this.x), this.x);
  square((12 * this.x), (6 * this.x), this.x);
  square((12 * this.x), (7 * this.x), this.x);
  square((12 * this.x), (8 * this.x), this.x);
  //column 12
  square((13 * this.x), (5 * this.x), this.x);
  square((13 * this.x), (6 * this.x), this.x);
  square((13 * this.x), (7 * this.x), this.x);
  square((13 * this.x), (8 * this.x), this.x);
  //column 13
  square((14 * this.x), (3 * this.x), this.x);
  square((14 * this.x), (4 * this.x), this.x);
  square((14 * this.x), (5 * this.x), this.x);
  square((14 * this.x), (6 * this.x), this.x);
  square((14 * this.x), (7 * this.x), this.x);
  square((14 * this.x), (8 * this.x), this.x);
  //column 14
  square((15 * this.x), (3 * this.x), this.x);
  square((15 * this.x), (4 * this.x), this.x);
  square((15 * this.x), (5 * this.x), this.x);
  square((15 * this.x), (6 * this.x), this.x);
  square((15 * this.x), (7 * this.x), this.x);
  square((15 * this.x), (8 * this.x), this.x);
  //column 15
  square((16 * this.x), (3 * this.x), this.x);
  square((16 * this.x), (4 * this.x), this.x);
  square((16 * this.x), (5 * this.x), this.x);
  square((16 * this.x), (6 * this.x), this.x);
  square((16 * this.x), (7 * this.x), this.x);
  square((16 * this.x), (8 * this.x), this.x);
  //column 16
  square((17 * this.x), (3 * this.x), this.x);
  square((17 * this.x), (4 * this.x), this.x);
  square((17 * this.x), (5 * this.x), this.x);
  square((17 * this.x), (6 * this.x), this.x);
  square((17 * this.x), (7 * this.x), this.x);
  square((17 * this.x), (8 * this.x), this.x);
  //column 17
  square((18 * this.x), (3 * this.x), this.x);
  square((18 * this.x), (4 * this.x), this.x);
  square((18 * this.x), (5 * this.x), this.x);
  square((18 * this.x), (6 * this.x), this.x);
  square((18 * this.x), (7 * this.x), this.x);
  square((18 * this.x), (8 * this.x), this.x);
  //column 18
  square((19 * this.x), (2 * this.x), this.x);
  square((19 * this.x), (3 * this.x), this.x);
  square((19 * this.x), (4 * this.x), this.x);
  square((19 * this.x), (5 * this.x), this.x);
  square((19 * this.x), (6 * this.x), this.x);
  square((19 * this.x), (7 * this.x), this.x);
  square((19 * this.x), (8 * this.x), this.x);
  
  
  //lantoids and actinoids
  
  //row 1
  square((4 * this.x), (9.5 * this.x), this.x);
  square((5 * this.x), (9.5 * this.x), this.x);
  square((6 * this.x), (9.5 * this.x), this.x);
  square((7 * this.x), (9.5 * this.x), this.x);
  square((8 * this.x), (9.5 * this.x), this.x);
  square((9 * this.x), (9.5 * this.x), this.x);
  square((10 * this.x), (9.5 * this.x), this.x);
  square((11 * this.x), (9.5 * this.x), this.x);
  square((12 * this.x), (9.5 * this.x), this.x);
  square((13 * this.x), (9.5 * this.x), this.x);
  square((14 * this.x), (9.5 * this.x), this.x);
  square((15 * this.x), (9.5 * this.x), this.x);
  square((16 * this.x), (9.5 * this.x), this.x);
  square((17 * this.x), (9.5 * this.x), this.x);
  //row 2
  square((4 * this.x), (10.5 * this.x), this.x);
  square((5 * this.x), (10.5 * this.x), this.x);
  square((6 * this.x), (10.5 * this.x), this.x);
  square((7 * this.x), (10.5 * this.x), this.x);
  square((8 * this.x), (10.5 * this.x), this.x);
  square((9 * this.x), (10.5 * this.x), this.x);
  square((10 * this.x), (10.5 * this.x), this.x);
  square((11 * this.x), (10.5 * this.x), this.x);
  square((12 * this.x), (10.5 * this.x), this.x);
  square((13 * this.x), (10.5 * this.x), this.x);
  square((14 * this.x), (10.5 * this.x), this.x);
  square((15 * this.x), (10.5 * this.x), this.x);
  square((16 * this.x), (10.5 * this.x), this.x);
  square((17 * this.x), (10.5 * this.x), this.x);

  
  fill(60);
  stroke(255, 255, 255);
  strokeWeight(1);
}
  
